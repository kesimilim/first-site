{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesim\\\\first-site\\\\src\\\\Components\\\\Pages.js\";\n// import React, { useState } from 'react';\n// import 'bootstrap/dist/css/bootstrap.css';\n// import Pagination from 'react-bootstrap/Pagination';\n// import { PaginationControl } from 'react-bootstrap-pagination-control';\n// import { Container } from 'react-bootstrap';\n\n// export default function Pages() {\n//   const [page, setPage] = useState(1)\n\n//   return <PaginationControl\n//     page={page}\n//     between={4}\n//     total={250}\n//     limit={20}\n//     changePage={(page) => {\n//       setPage(page); \n//     }}\n//     ellipsis={1}\n//   />\n// }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Pages extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      loading: false,\n      currentPage: 1,\n      postsPerPage: 5\n    };\n  }\n  componentDidMount() {\n    const getPosts = async () => {\n      this.setState({\n        loading: true\n      });\n      const results = await axios.get('https://jsonplaceholder.typicode.com/posts');\n      this.setState({\n        posts: results.data\n      });\n      this.setState({\n        loading: false\n      });\n    };\n    getPosts();\n  }\n  render() {\n    const {\n      currentPage,\n      postsPerPage,\n      posts,\n      loading\n    } = this.state;\n    const indexOfLastPost = currentPage * postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n    const paginate = pageNum => this.setState({\n      currentPage: pageNum\n    });\n    const nextPage = () => this.setState({\n      currentPage: currentPage + 1\n    });\n    const prevPage = () => this.setState({\n      currentPage: currentPage - 1\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5 text-primary text-center\",\n        children: \"React Pagination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        posts: currentPosts,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        postsPerPage: postsPerPage,\n        totalPosts: posts.length,\n        paginate: paginate,\n        nextPage: nextPage,\n        prevPage: prevPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Pages;","map":{"version":3,"names":["React","Component","axios","Posts","Pagination","Pages","state","posts","loading","currentPage","postsPerPage","componentDidMount","getPosts","setState","results","get","data","render","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNum","nextPage","prevPage","length"],"sources":["C:/Users/kesim/first-site/src/Components/Pages.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n// import Pagination from 'react-bootstrap/Pagination';\r\n// import { PaginationControl } from 'react-bootstrap-pagination-control';\r\n// import { Container } from 'react-bootstrap';\r\n\r\n// export default function Pages() {\r\n//   const [page, setPage] = useState(1)\r\n\r\n//   return <PaginationControl\r\n//     page={page}\r\n//     between={4}\r\n//     total={250}\r\n//     limit={20}\r\n//     changePage={(page) => {\r\n//       setPage(page); \r\n//     }}\r\n//     ellipsis={1}\r\n//   />\r\n// }\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Posts from './components/Posts';\r\nimport Pagination from './components/Pagination';\r\n\r\nexport class Pages extends Component {\r\n  state = {\r\n    posts: [],\r\n    loading: false,\r\n    currentPage: 1,\r\n    postsPerPage: 5\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getPosts = async () => {\r\n      this.setState({ loading: true });\r\n      const results = await axios.get('https://jsonplaceholder.typicode.com/posts');\r\n      this.setState({ posts: results.data });\r\n      this.setState({ loading: false });\r\n    };\r\n\r\n    getPosts();\r\n  }\r\n\r\n  render() {\r\n    const { currentPage, postsPerPage, posts, loading } = this.state;\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNum => this.setState({ currentPage: pageNum });\r\n\r\n    const nextPage = () => this.setState({ currentPage: currentPage + 1 });\r\n\r\n    const prevPage = () => this.setState({ currentPage: currentPage - 1 });\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"my-5 text-primary text-center\">React Pagination</h1>\r\n        <Posts posts={currentPosts} loading={loading} />\r\n        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} nextPage={nextPage} prevPage={prevPage} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Pages\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAEjD,OAAO,MAAMC,KAAK,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KACnCK,KAAK,GAAG;MACNC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE;IAChB,CAAC;EAAA;EAEDC,iBAAiB,GAAG;IAClB,MAAMC,QAAQ,GAAG,YAAY;MAC3B,IAAI,CAACC,QAAQ,CAAC;QAAEL,OAAO,EAAE;MAAK,CAAC,CAAC;MAChC,MAAMM,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC;MAC7E,IAAI,CAACF,QAAQ,CAAC;QAAEN,KAAK,EAAEO,OAAO,CAACE;MAAK,CAAC,CAAC;MACtC,IAAI,CAACH,QAAQ,CAAC;QAAEL,OAAO,EAAE;MAAM,CAAC,CAAC;IACnC,CAAC;IAEDI,QAAQ,EAAE;EACZ;EAEAK,MAAM,GAAG;IACP,MAAM;MAAER,WAAW;MAAEC,YAAY;MAAEH,KAAK;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACF,KAAK;IAEhE,MAAMY,eAAe,GAAGT,WAAW,GAAGC,YAAY;IAClD,MAAMS,gBAAgB,GAAGD,eAAe,GAAGR,YAAY;IACvD,MAAMU,YAAY,GAAGb,KAAK,CAACc,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;IAEnE,MAAMI,QAAQ,GAAGC,OAAO,IAAI,IAAI,CAACV,QAAQ,CAAC;MAAEJ,WAAW,EAAEc;IAAQ,CAAC,CAAC;IAEnE,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACX,QAAQ,CAAC;MAAEJ,WAAW,EAAEA,WAAW,GAAG;IAAE,CAAC,CAAC;IAEtE,MAAMgB,QAAQ,GAAG,MAAM,IAAI,CAACZ,QAAQ,CAAC;MAAEJ,WAAW,EAAEA,WAAW,GAAG;IAAE,CAAC,CAAC;IAEtE,oBACE;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAI,SAAS,EAAC,+BAA+B;QAAA,UAAC;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAK,eACnE,QAAC,KAAK;QAAC,KAAK,EAAEW,YAAa;QAAC,OAAO,EAAEZ;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG,eAChD,QAAC,UAAU;QAAC,YAAY,EAAEE,YAAa;QAAC,UAAU,EAAEH,KAAK,CAACmB,MAAO;QAAC,QAAQ,EAAEJ,QAAS;QAAC,QAAQ,EAAEE,QAAS;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5H;EAEV;AACF;AAEA,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}